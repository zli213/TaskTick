@use "./utils/variable" as *;

.setting_modal_container {
  position: fixed;
  top: calc(50vh - $settingHeight / 2);
  left: calc(50vw - $settingPageWidth / 2);
  display: flex;
  background-color: #fff;
  border-radius: $borderRadius;
  color: $textPrimaryColor;
  width: $settingPageWidth;
  flex-direction: row;
  min-height: $settingHeight;
  max-height: $settingPageWidth;
  box-shadow: 0px 0px 4px 4px rgba($color: black, $alpha: 0.1);

}

.setting_left {
  width: 20%;
  padding: $paddingsm;
  min-width: 22rem;
  text-align: left;
  background-color: $lightGrayColor;
  border-radius: $borderRadius 0 0 $borderRadius;

  h2 {
    padding: $paddingsm;
  }

  ul {
    margin: 0;
    padding: 0;
    list-style: none;

    div {
      border-radius: $borderRadius;
      font-size: $fontSizeSm;
      padding: $paddingXsm $paddingsm $paddingXsm $paddingXsm;

      &:hover {
          background-color: $hoverColor;
      }
    }
  }


  .leftGroup {
    width: 100%;
    @include flexRowStart();
    align-items: center;
    cursor: pointer;

    span {
      @include flexRowStart();
    }

    a {
      width: 100%;
      display: flex;
      flex-direction: row;
      justify-items: baseline
    }

    .list_item_content {
      padding-left: $paddingXsm;
      line-height: $fontSizeLg;
    }
  }
}

.selected {
  background-color: $selectedColor !important;
  color: $primaryColor;
}

.setting_right {
  width: 80%;
  padding: $paddingsm;
  border-radius: 0 $borderRadius $borderRadius 0;
  text-align: left;
  overflow: hidden;
}

.grey_cover {
  background-color: rgba($color:black, $alpha: 0.5);
  z-index: 10;
}